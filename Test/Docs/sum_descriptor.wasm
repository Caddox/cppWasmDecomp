00000000: 0061 736d 0100 0000 0187 8080 8000 0160  .asm...........`
00000010: 027f 7f01 7f03 8280 8080 0001 0004 8480  ................
00000020: 8080 0001 7000 0005 8380 8080 0001 0001  ....p...........
00000030: 0681 8080 8000 0007 9680 8080 0002 066d  ...............m
00000040: 656d 6f72 7902 0009 5f5a 3373 756d 5069  emory..._Z3sumPi
00000050: 6900 000a b780 8080 0001 b180 8080 0001  i...............
00000060: 017f 4100 2102 0240 2001 4101 480d 0003  ..A.!..@ .A.H...
00000070: 4020 0028 0200 2002 6a21 0220 0041 046a  @ .(.. .j!. .A.j
00000080: 2100 2001 417f 6a22 010d 000b 0b20 020b  !. .A.j"..... ..
00000090: 0a                                       .

Actual function:
        int sum(int * list, int length)
        {
            int sum = 0;
            for(int i = 0; i < length; ++i)
            {
                sum += list[i];
            }
            return sum;
        }

Code Section:
0a b780 8080 00
01 b180 8080 00
01 017f 

    41 00
    21 02                           Because a local variable is available, fill it here.
    02 40
        20 01
        41 01
        48
        0d 00
            03 40

            20 00
            28 02 00                This takes the value from the top of the stack and uses it as the index
            20 02
            6a

            21 02
            20 00
            41 04
            6a

            21 00
            20 01
            41 7f
            6a

            22 01
            0d 00
        0b
    0b
    20 02
    0b
    0a
